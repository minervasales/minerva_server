// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum role {
  admin
  customer
}

model User {
  userID    String     @id @default(cuid())
  id        String
  email     String     @unique
  password  String
  profile   Profile?
  role      role
  verified  Boolean
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  User      Schedule[]
  Product   Product[]
  Services  Services[]
  Logs      Logs[]
  Orders    Orders[]
  Archive   Archive[]
}

model Archive {
  archieveID String   @id @default(cuid())
  id         String
  startDate  DateTime @db.Date
  endDate    DateTime @db.Date
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  User       User?    @relation(fields: [userID], references: [userID])
  userID     String?
  Orders     Orders[]
}

model Profile {
  profileID String   @id @default(cuid())
  firstname String
  lastname  String
  phone     String
  shipping  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  User      User?    @relation(fields: [userID], references: [userID])
  userID    String?  @unique
}

model Services {
  servicesID  String   @id @default(cuid())
  id          String
  image       String
  price       Float
  services    String
  description String
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  User        User?    @relation(fields: [userUserID], references: [userID])
  userUserID  String?
}

model Product {
  productID    String   @id @default(cuid())
  id           String
  image        String[]
  stock        String
  name         String
  descriptions String
  price        Float
  quantity     Int
  category     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  User         User[]
  Orders       Orders[]
}

model Schedule {
  scheduleID String   @id @default(cuid())
  id         String
  name       String?
  date       String
  service    String
  status     String
  time       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  User       User[]
}

model Logs {
  logsID    String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now()) @db.Timestamp()
  User      User?    @relation(fields: [userID], references: [userID])
  userID    String?
}

model Orders {
  orderID   String    @id @default(cuid())
  orders    String
  quantity  Int
  total     Float
  payment   String
  status    String
  Product   Product[]
  User      User[]
  Archive   Archive[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
}
